Testing stuff:

1. Open recent Project

Voraussetzung: ProB2-UI ist geöffnet, über File wird bei Recent project ein Projekt ausgewählt

Testfälle:

1.

Projekt ist gültig

Erwartetes Ergebnis: Projekt wird geladen und Projekt Tab klappt auf

Tatsächliches Ergebnis: Projekt wird geladen und Projekt Tab klappt auf


2.

Projekt befindet sich nicht im angegebenen Pfad

Erwartetes Ergebnis: Fehlermeldung erscheint

Tatsächliches Ergebnis: Fehlermeldung erscheint


3.

Projekt Datei enthält fehlendene Informationen

Erwartetes Ergebnis: Projekt kann trotzdem geladen werden

Tatsächliches Ergebnis: Projekt kann trotzdem geladen werden, JSON Dateiname wird angepasst


4.

Format der Projekt Datei ist fehlerhaft

Erwartetes Ergebnis: Fehlermeldung tritt auf und Nutzer wird benachrichtigt, dass das Format der Datei falsch ist

Tatsächliches Ergebnis: Fehlermeldung tritt auf und Nutzer wird benachrichtigt, dass das Format der Datei falsch ist




2. View Current Machine Formatted



Vorraussetzung: ProB2-UI ist geöffnet, über File wird entsprechendes Item ausgewählt

Testfälle:

1. Machine ist gültig

Erwartetes Ergebnis: Machine wird korrekt formatiert angezeigt und Unicode Darstellung ist möglich

Tatsächliches Ergebnis: Machine wird korrekt formatiert angezeigt und Unicode Darstellung ist möglich



2. Machine ist ungültig

Erwartetes Ergebnis: Zuerst wird Parsefehler geworfen, entsprechendes Item wird deaktiviert

Tatsächliches Ergebnis: Zuerst wird Parsefehler geworfen, entsprechendes Item wird deaktiviert


3. Save As..

Erwartetes Ergebnis: Save Dialog wird angezeigt mit mch als Endung

Tatsächliches Ergebnis: Save Dialog wird angezeigt mit mch als Endung









3. Reload Current Machine





Vorraussetzung: ProB2-UI ist geöffnet, über File wird entsprechendes Item ausgewählt

Testfälle

1. Machine ist gültig

Erwartetes Ergebnis: Machine wird korrekt neu geladen

Tatsächliches Ergebnis: Machine wird korrekt neu geladen


2. Machine ist ungültig


Erwartetes Ergebnis: Parsefehler wird geworfen

Tatsächliches Ergebnis: Parsefehler wird geworfen






4. Zoomen

Voraussetzung: ProB2-UI ist geöffnet, über View werden entsprechende Items bzw. Tastenkombinationen getestet

Testfälle

1. Reinzoomen

Erwartestes Ergebnis: Es wird reingezoomt und eine obere Grenze ist vorhanden

Tatsächliches Ergebnis: Es wird reingezoomt, es ist keine obere Grenze vorhanden

2. Rauszoomen

Erwartetes Ergebnis: Es wird rausgezoomt und eine untere Grenze ist vorhanden

Tatsächliches Ergebnis: Es wird rausgezoomt und eine untere Grenze ist vorhanden

3. Default Größe

Erwartetes Ergebnis: Default Größe wird gesetzt

Tatsächliches Ergebnis: Default Größe wird gesetzt

4. Enter Full Screen

Erwartetes Ergebnis: Full Screen Modus wird angeschaltet, Item Name wird verändert

Tatsächliches Ergebnis: Full Screen Modus wird angeschaltet Item Name wird verändert

Analog für Exit Full Screen








5. Open Help Window

Vorrausetzung: ProB2-UI wird geöffnet, über Help wird entsprechendes Item ausgewählt

Erwartetes Ergebnis: Hilfsfenster öffnet sich mit entsprechenden Inhalten

Tatsächliches Ergebnis: Hilfsfenster öffnet sich mit entsprechenden Inhalten

Auch in der .jar Version testen!






6. About ProB2

Vorraussetzung: ProB2-UI wird geöffnet, über Help wird entsprechendes Item ausgewählt

Erwartetes Ergebnis: Hilfsfenster öffnet sich mit Informationen über ProB2-UI, ProB2-Kernel und ProB CLI sowie Java

Tatsächliches Ergebnis: Hilfsfenster öffnet sich mit Informationen über ProB2-UI, ProB2-Kernel und ProB CLI sowie Java

Auch in der .jar Version testen!






7. Report A Bug

Vorraussetzung: ProB2-UI wird geöffnet, über Help wird entsprechendes Item ausgewählt

Erwartetes Ergebnis: Fenster öffnet sich, wo man sofort einen Bug melden kann

Tatsächliches Ergebnis: Fenster öffnet sich wo man sofort einen Bug melden kann

Auch in der .jar Version testen!



8. Cancel Button in allen File Dialogs testen:
-File/Open
-File/New Project
-File/View Current Machine Formatted/Save As
-Preferences/General/Select Location
-Project View/Open
-Project View/New Project




9. Perspektive auswählen

Es wird über Windows/Perspective eine Perspektive ausgewählt

Testfälle:

1.

Es wird eine default Perspektive ausgewählt

Erwartetes Ergebnis: Für alle Perspektiven wird diese korrekt geladen und dargestellt

Tatsächliches Ergebnis: Für alle Perspektiven wird diese korrekt geladen und dargestellt


2.


Es wird eine Perspektive als FXML geladen. Die FXML ist gültig

Erwartetes Ergebnis: Die Perspektive wird korrekt geladen und dargestellt

Tatsächliches Ergebnis: Die Perspektive wird korrekt geladen und dargestellt


3.

Es wird eine Perspektive als FXML geladen. Hierbei ist die FXML ungültig

Erwartetes Ergebnis: Fehlermeldung mit Exception, ProB2-UI stürzt nicht ab

Tatsächliches Ergebnis: Fehlermeldung mit Exception, ProB2-UI stürzt nicht ab

Allerdings wird die fehlerhafte FXML persistiert, sodass ein Laden vom prob2-ui nicht mehr möglich ist (BEHEBEN!)

Bemerkung: Anleitung für das Erstellen einzelner Sichten





10. Detachen von Komponenten

Es werden Kombinationen von Komponenten detacht. Hierbei wird getestet ob die einzelnen Komponenten noch funktionsfähig sind. Ebenso sollen die
detachten Komponenten wieder geschlossen werden umzu überprüfen ob diese wieder in der Main Stage auftauchen.

Erwartetes Ergebnis: Komponenten werden detacht und sind funktionsfähig. Beim Schließen tauchen diese wieder in der Main Stage auf.

Tatsächliches Ergebnis: Komponenten werden detacht und sind funktionsfähig. Beim Schließen tauchen diese wieder in der Main Stage auf.




11. User erhält nicht immer Feedback wenn probcli abgestürzt ist -> UI lässt sich nicht mehr bedienen


12. UI Persistence enthält Bugs insbesondere beim Detachen von Views und wenn fehlerhafte FXML Dateien als View gesetzt werden
 -> NullPointerException unter Umständen wenn man versucht die View zurückzusetzen



13. OperationsView

Testfälle:

1.

Suchfunktion wird mit Lowercase und Uppercase getestet

Erwartetes Ergebnis: Entsprechende Einträge werden angezeigt

Tatsächliches Ergebnis: Entsprechende Einträge werden angezeigt


2.

Hilfebutton 

Erwartetes Ergebnis: Hilfe Fenster wird geöffnet und zum entsprechenden Eintrag weitergeleitet

Tatsächliches Ergebnis: Hilfe Fenster wird geöffnet, entsprechender Eintrag für die OperationsView nicht vorhanden


3. Sortieren -> funktioniert

4. Im Trace nach vorne/zurück gehen -> funktioniert

5. Disabled operations anzeigen -> funktioniert

6. Execute random events + abbrechen -> funktioniert

7. Reload -> funktioniert

8. Show Details -> funktioniert

9. Execute By Predicate -> funktioniert; bei nicht parsebarem Prädikat wird allerdings eine Exception angezeigt (BEHEBEN?)





14. HistoryView

Testfälle:

1. Vor/Zurückspulen -> funktioniert

2. Position im Trace auswählen -> funktionert

3. Reload -> funktioniert

4. Hilfebutton 

Erwartetes Ergebnis: Hilfe Fenster wird geöffnet und zum entsprechenden Eintrag weitergeleitet

Tatsächliches Ergebnis: Hilfe Fenster wird geöffnet, wird nicht zum entsprechenden Eintrag weitergeleitet


5. Trace abspeichern -> funktioniert außer bei CSP; falls History nur den root als Eintrag hat dann kommt eine Exception (BEHEBEN!)






15. Neues Projekt erstellen

Testfälle:

1. Ungültige Location 

Erwartetes Ergebnis: Fehlermeldung

Tatsächliches Ergebnis: Fehlermeldung

2. Gültige Location

Erwartetes Ergebnis: Leeres Projekt wird erstellt

Tatsächliches Ergebnis: Leeres Projekt wird erstellt




16. Graph Visualisierung

1. Ausgewählte Darstellung verfügbar

Erwartetes Ergebnis: Darstellung wird angezeigt

Tatsächliches Ergebnis: Darstellung wird angezeigt



2. Ausgewählte Darstellung nicht verfügbar

Erwartetes Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Tatsächliches Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Bemerkung: Visualisierung wird zurückgesetzt




3. Ausgewählte Darstellung verfügbar mit Continuous Update

Erwartetes Ergebnis: Darstellung wird angezeigt, beim Ausführen einer Operation wird Darstellung aktualisiert

Tatsächliches Ergebnis: Darstellung wird angezeigt, beim Ausführen einer Operation wird Darstellung aktualisiert




4. Ausgewählte Darstellung nicht verfügbar mit Continuous Update

Erwartetes Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Tatsächliches Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Bemerkung: Visualisierung wird zurückgesetzt




5. Ausgewählte Darstellung verfügbar mit Formel

Erwartetes Ergebnis: Darstellung wird angezeigt, wenn im Formelfeld Enter gedrückt wurde

Tatsächliches Ergebnis: Darstellung wird angezeigt, wenn im Formelfeld Enter gedrückt wurde


Bemerkung: Bei der Auswahl einer Darstellung mit Formel wird die Darstellung zurückgesetzt



6. Ausgewählte Darstellung nicht verfügbar mit Formel

Erwartetes Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Tatsächliches Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Bemerkung: Visualisierung wird zurückgesetzt



7. Ausgewählte Darstellung verfügbar mit Formel mit Continuous Update

Erwartetes Ergebnis: Darstellung wird angezeigt, beim Ausführen einer Operation wird Darstellung aktualisiert

Tatsächliches Ergebnis: Darstellung wird angezeigt, beim Ausführen einer Operation wird Darstellung aktualisiert



8. Ausgewählte Darstellung nicht verfügbar mit Formel ohne Continuous Update

Erwartetes Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Tatsächliches Ergebnis: Darstellung wird nicht angezeigt, Nutzer wird informiert, dass die Darstellung nicht verfügbar ist

Bemerkung: Visualisierung wird zurückgesetzt



9. Visualisierung abbrechen -> funktioniert

10. Reinzoomen per Button und per Shortcut (falls Eingabefeld den Fokus hat, soll dort nichts eingegeben werden) -> funktioniert

11. Rauszoomen per Button und per Shortcut (falls Eingabefeld den Fokus hat, soll dort nichts eingegeben werden) -> funktioniert

12. Draging in der View -> funktioniert

Cursor?

13. Enter/Shift Enter im Eingabefeld für Formeln -> funktioniert

14. Hilfe Button -> springt noch nicht an die richtige Stelle


Bemerkung: Renderingfehler in der HTML View



17. Tabellen Visualisierung

1. Ausgewählte Darstellung verfügbar

Erwartetes Ergebnis: Tabelle wird dargestellt

Tatsächliches Ergebnis: Tabelle wird dargestellt



2. Ausgewählte Darstellung nicht verfügbar

Erwartetes Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Tatsächliches Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Bemerkung: Visualisierung wird zurückgesetzt



3. Ausgewählte Darstellung verfügbar mit Continuous Update

Erwartetes Ergebnis: Tabelle wird dargestellt; Falls sich der State Space ändern wird die Tabelle dementsprechend aktualisiert

Tatsächliches Ergebnis: Tabelle wird dargestellt; Falls sich der State Space ändern wird die Tabelle dementsprechend aktualisiert



4. Ausgewählte Darstellung nicht verfügbar mit Continuous Update

Erwartetes Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Tatsächliches Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.




5. Ausgewählte Darstellung verfügbar mit Formel

Erwartetes Ergebnis: Tabelle wird dargestellt

Tatsächliches Ergebnis: Tabelle wird dargestellt

Bemerkung: Bei Auswahl einer Darstellung mit Formel wird die Visualisierung zurückgesetzt



6. Ausgewählte Darstellung nicht verfügbar mit Formel

Erwartetes Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Tatsächliches Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Bemerkung: Visualisierung wird zurückgesetzt


7. Ausgewählte Darstellung verfügbar mit Formel mit Continuous Update

Erwartetes Ergebnis: Tabelle wird dargestellt; Falls sich der State Space ändern wird die Tabelle dementsprechend aktualisiert

Tatsächliches Ergebnis: Tabelle wird dargestellt; Falls sich der State Space ändern wird die Tabelle dementsprechend aktualisiert

Bemerkung: Visualisierung wird zurückgesetzt




8. Ausgewählte Darstellung nicht verfügbar mit Formel ohne Continuous Update

Erwartetes Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Tatsächliches Ergebnis: Tabelle wird nicht dargestellt; Nutzer wird benachrichtigt, dass die Darstellung nicht verfügbar ist.

Bemerkung: Visualisierung wird zurückgesetzt



9. Visualisierung abbrechen -> funktioniert

10. Enter/Shift Enter im Eingabefeld für Formeln

Erwartetes Ergebnis: Bei Enter wird die Formel dargestellt und kein Zeilenumbruch in der Formeleingabe hinzugefügt, bei Shift Enter wird nur ein Zeilenumbruch hinzugefügt

Tatsächliches Ergebnis: Bei Enter wird die Formel dargestellt und kein Zeilenumbruch in der Formeleingabe hinzugefügt, bei Shift Enter wird nur ein Zeilenumbruch hinzugefügt


11. Hilfe Button -> springt noch nicht an die richtige Stelle



18. BEditor

1. Undo -> funktioniert, Cursor muss sich an der richtigen Stelle befinden
2. Redo -> funktioniert, Cursor muss sich an der richtigen Stelle befinden
3. Cut -> funktioniert
4. Copy -> funktioniert
5. Paste -> funktioniert
6. Delete -> funktioniert
7. Select all -> funktioniert
8. Save Machine File -> funktioniert
9. Highlighting -> funktioniert
10. Help Button -> springt noch nicht an die richtige Stelle




19. Save Project -> funktioniert



20. Project View

1. Load machine -> funktioniert

2. Load machine with error -> Fehlermeldung kommt -> funktioniert

3. Edit machine file in external editor -> funktioniert

4. Start animation -> funktioniert

5. Edit machine configuration -> funktioniert

6. Show machine description -> funktioniert

7. Remove machine -> funktioniert

8. Add machine -> funktioniert

9. Help Buttons -> funktionieren, springen allerdings noch nicht an die richtige Stelle

10. Status 

Erwartetes Ergebnis: Nach dem Prüfen einer Formel wird dementsprechend Success oder Failed angezeigt, beim Neuladen der Maschine wird es zurückgesetzt. Ebenso wird die Anzeige verändert wenn die zu auswertenden Formel in der Verifications View geändert wurden

Tatsächliches Ergebnis: Nach dem Prüfen einer Formel wird dementsprechend Success oder Failed angezeigt, beim Neuladen der Maschine wird es zurückgesetzt. Ebenso wird die Anzeige verändert wenn die zu auswertenden Formel in der Verifications View geändert wurden



11. Add Preference -> funktioniert

12. Edit Preference -> funktioniert

13. Remove Preference -> funktioniert

14. Edit Project -> funktioniert

15. Edit Description -> funktioniert






21. History Chart

1. Es wird auf das '+' geklickt und eine valide Formel eingegeben

Erwartetes Ergebnis: Eingegebene Formel wird in der Grafik dargestellt

Tatsächliches Ergebnis: Eingegebene Formel wird in der Grafik dargestellt




22. Es wird auf das '+' geklickt und eine invalide Formel eingegeben

Erwartetes Ergebnis: Fehlermeldung erscheint

Tatsächliches Ergebnis: Fehlermeldung erscheint




3. Es wird eine Formel ausgewählt und auf das '-' geklickt

Erwartetes Ergebnis: Formel wird gelöscht

Tatsächliches Ergebnis: Formel wird gelöscht



4. Start at Position wird geändert

Erwartetes Ergebnis: Es wird nur der entsprechende Abschnitt des Graphen angezeigt

Tatsächliches Ergebnis: Es wird nur der entsprechende Abschnitt des Graphen angezeigt



5. Separate Charts wird ausgewählt

Erwartetes Ergebnis: Graphen werden in einer einzigen Abbildung dargestellt

Tatsächliches Ergebnis: Graphen werden in einer einzigen Abbildung dargestellt



6. Separate Charts wird nicht ausgewählt

Erwartetes Ergebnis: Pro Formel gibt es einen Graphen

Tatsächliches Ergebnis: Pro Formel gibt es einen Graphen



7. Hilfebutton -> springt noch nicht an die richtige Stelle



Bemerkungen:

1. Eingaben persistieren?

2. Farben sind nicht ganz korrekt, wenn man Separate Charts auswählt, eine Formel eingibt und dann Separate Charts ausschaltet




23. Statistics:

1. HelpButton -> springt noch nicht an die richtige Stelle

2. Show Extended Stats -> funktioniert

3. View updatet sich beim Animieren, beim Modelchecking und beim Trace Replay -> funktioniert





24. StateView:

1. View updatet sich wenn sich der Trace ändert -> funktioniert

2. HelpButton springt noch nicht an die richtige Stelle

3. Suchfunktion wird mit Lowercase und Uppercase getestet (sowohl mit Enter im Suchfeld als auch mit dem Suchbutton)

Erwartetes Ergebnis: Entsprechende Einträge werden angezeigt

Tatsächliches Ergebnis: Entsprechende Einträge werden angezeigt

4. Copy u.a. mit CTRL+V -> funktioniert

5. Visualize as Graph -> funktioniert

6. Visualize as Table -> funktioniert

7. Show Details -> funktioniert



25. State Visualization -> funktioniert

Bemerkungen:

Besser Lazy auswerten?



26. State Errors -> funktioniert





27. Trace Replay

1. Alle Traces checken -> funktioniert

Erwartetes Ergebnis: Alle Traces werden überprüft, es wird am Ende kein currentTrace neu gesetzt

Tatsächliches Ergebnis: Alle Traces werden überprüft, es wird am Ende kein currentTrace neu gesetzt



2. Interrupt

Erwartetes Ergebnis: Trace Replay wird unterbrochen, der Ladebalken wird gestoppt

Tatsächliches Ergebnis: Trace Replay wird unterbrochen, der Ladebalken wird gestoppt


3. Nur ein Trace checken -> dieser Trace kann erfolgreich nachgespielt werden

Erwartetes Ergebnis: Ausgewählter Trace wird überprüft, es wird am Ende der currentTrace neugesetzt; Show Error ist disabled

Tatsächliches Ergebnis: Ausgewählter Trace wird überprüft, es wird am Ende der currentTrace neugesetzt; Show Error ist disabled



4. Nur ein Trace checken -> dieser Trace kann nicht nachgespielt werden

Erwartetes Ergebnis: Nach dem Überprüfen kommt eine Fehlermeldung, die über Show Error angezeigt werden kann; Show Error ist enabled

Tatsächliches Ergebnis: Nach dem Überprüfen kommt eine Fehlermeldung, die über Show Error angezeigt werden kann; Show Error ist enabled




5. Trace entfernen -> funktioniert


6. Hilfebutton -> springt nicht an die richtige Stelle


7. Show Error -> funktioniert


8. Hilfebutton -> springt noch nicht an die richtige Stelle

9. Hinzufügen von bereits vorhandenen Traces

Erwartetes Ergebnis: Trace wird nicht hinzugefügt

Tatsächliches Ergebnis: Trace wird nicht hinzugefügt



10. Trace ohne Syntaxfehler laden und überprüfen -> funktioniert

11. Trace mit Syntaxfehler laden -> funktioniert


12. Deaktivierung eines Traces -> funktioniert


13. Überprüfen mit deaktivierten Traces

Erwartetes Ergebnis: Deaktivierte Traces werden nicht überprüft

Tatsächliches Ergebnis: Deaktivierte Traces werden nicht überprüft







28. Modelchecking

1. Alle Checks überprüfen

Erwartetes Ergebnis: Alle gegebenen Model Checking Strategien werden überprüft und dementsprechend der Status gesetzt, Fehler Trace wird nicht gesetzt

Tatsächliches Ergebnis: Alle gegebenen Model Checking Strategien werden überprüft und dementsprechend der Status gesetzt, Fehler Trace wird nicht gesetzt



2. Check abbrechen

Erwartetes Ergebnis: Alle laufenden Checks werden abgebrochen und dementsprechend angezeigt

Tatsächliches Ergebnis: Alle laufenden Checks werden abgebrochen und dementsprechend angezeigt, unter Umständen können Threads die Anwendung blockieren



3. Neue Strategie überprüfen mit erfolgreichem Check -> funktioniert

4. Neue Strategie überprüfen mit fehlgeschlagenem Check -> funktioniert

5. Eine vorhandene Strategie überprüfen mit erfolgreichem Check -> funktioniert

6. Eine vorhandene Strategie überprüfen mit fehlgeschlagenem Check -> funktioniert

7. Show Error State

Erwartetes Ergebnis: Item ist nur verfügbar, wenn ein Fehler aufgetreten ist oder ein Timeout stattgefunden hat; Fehlerzustand wird angezeigt

Tatsächliches Ergebnis: Item ist nur verfügbar, wenn ein Fehler aufgetreten ist oder ein Timeout stattgefunden hat; Fehlerzustand wird angezeigt



8. Show Details -> funktioniert

9. Search for new errors

Erwartetes Ergebnis: Ein anderer Fehlerzustand zum ausgewählten Check wird angezeigt

Tatsächliches Ergebnis: Ein anderer Fehlerzustand zum ausgewählten Check wird angezeigt



10. Remove item -> funktioniert

11. Hilfebutton -> funktioniert, springt noch nicht an die richtige Stelle

12. Deaktivierung eines Modelchecking Items


Erwartetes Ergebnis: Bei Deaktivierung eines Items passt sich der Machine Status und die Status Bar für die Fehler sich an

Tatsächliches Ergebnis: Bei Deaktivierung eines Items passt sich der Machine Status und die Status Bar für die Fehler sich an



13. Überprüfen mit deaktivierten Items

Erwartetes Ergebnis: Beim Überprüfen aller Items, werden deaktivierte Items nicht ausgeführt; das MenuItem für Check ist hierbei für dieses Item deaktiviert

Tatsächliches Ergebnis: Beim Überprüfen aller Items, werden deaktivierte Items nicht ausgeführt; das MenuItem für Check ist hierbei für dieses Item deaktiviert





29. LTL

1. Überprüfen einer erfolgreichen LTL Formel -> funktioniert



2. Überprüfen einer LTL Formel mit Gegenbeispiel

Erwartetes Ergebnis: Formel wird überprüft und ein Gegenbeispiel gefunden; es wird direkt zum Gegenbeispiel gewechselt

Tatsächliches Ergebnis: Formel wird überprüft und ein Gegenbeispiel gefunden; es wird direkt zum Gegenbeispiel gewechselt




3. Überprüfen einer LTL Formel mit Syntaxfehler

Erwartetes Ergebnis: Check nicht erfolgreich, Syntaxfehler wird bei der Fehlernachricht gesetzt

Tatsächliches Ergebnis: Check nicht erfolgreich, Syntaxfehler wird bei der Fehlernachricht gesetzt




4. Hinzufügen von LTL Formeln -> funktioniert

5. Hinzufügen von LTL Pattern -> funktioniert

6. Ändern von LTL Formel -> funktioniert

Erwartetes Ergebnis: Pattern wird geändert, geparst und vorhandene Fehlernachrichten sowie Fehlertraces zurückgesetzt

Tatsächliches Ergebnis: Pattern wird geändert, geparst und vorhandene Fehlernachrichten sowie Fehlertraces zurückgesetzt




7. Ändern von LTL Pattern zu einem gültigen Pattern -> funktioniert

Erwartetes Ergebnis: Pattern wird geändert, geparst und vorhandene Fehlernachrichten zurückgesetzt

Tatsächliches Ergebnis: Pattern wird geändert, geparst und vorhandene Fehlernachrichten zurückgesetzt




8. Ändern von LTL Pattern zu einem ungültigen Pattern -> funktioniert

Erwartetes Ergebnis: Pattern wird geändert, geparst und vorhandene Fehlernachrichten zurückgesetzt und die neue angezeigt

Tatsächliches Ergebnis: Pattern wird geändert, geparst und vorhandene Fehlernachrichten zurückgesetzt und die neue angezeigt




9. Ändern von LTL Pattern zu einem bereits vorhandenen Pattern

Erwartetes Ergebnis: Meldung erscheint, dass das Pattern bereits vorhanden ist

Tatsächliches Ergebnis: Meldung erscheint, dass das Pattern bereits vorhanden ist





10. Ändern von LTL Formel zu einer bereits vorhandenen Formel

Erwartetes Ergebnis: Meldung erscheint, dass die Formel bereits vorhanden ist

Tatsächliches Ergebnis: Meldung erscheint, dass die Formel bereits vorhanden ist



11. Fehlernachricht anzeigen bei LTL Formel -> funktioniert

12. Fehlernachricht anzeigen bei LTL Pattern -> funktioniert

13. Gegenbeispiel anzeigen bei LTL Formel -> funktioniert

14. LTL Formel löschen -> funktioniert

15. LTL Pattern löschen -> funktioniert



16. Alle Formel ausführen

Erwartetes Ergebnis: Alle Formeln werden überprüft und dementsprechend die Ergebnisse angezeigt; der Trace wird nicht gewechselt

Tatsächliches Ergebnis: Alle Formeln werden überprüft und dementsprechend die Ergebnisse angezeigt; der Trace wird nicht gewechselt



17. Checking abbrechen -> funktioniert

18. Hilfebutton -> springt noch nicht an die richtige Stelle


19. Aufruf von gültigen Patterns innerhalb Patterns -> funktioniert

20. Aufruf von ungültigen Patterns innerhalb Patterns -> funktioniert

21. Aufruf von gültigen Patterns innerhalb Formeln -> funktioniert

22. Aufruf von ungültigen Patterns innerhalb Formeln -> funktioniert



23. Redundante Definition von Pattern

Erwartetes Ergebnis: Es wird keine zusätzliche Formel hinzugefügt

Tatsächliches ergebnis: Es wird keine zusätzliche Formel hinzugefügt



24. Redundante Definition von Formeln 

Erwartetes Ergebnis: Es wird keine zusätzliche Formel hinzugefügt

Tatsächliches ergebnis: Es wird keine zusätzliche Formel hinzugefügt


25. Deaktivierung einer Formel

Erwartetes Ergebnis: Bei Deaktivierung der Formel passt sich der Machine Status und die Status Bar für die Fehler sich an

Tatsächliches Ergebnis: Bei Deaktivierung der Formel passt sich der Machine Status und die Status Bar für die Fehler sich an



26. Überprüfen mit deaktivierten Formel

Erwartetes Ergebnis: Deaktivierte Formel werden nicht überprüft

Tatsächliches Ergebnis: Deaktivierte Formel werden nicht überprüft







30. Symbolic Model Checking

1. Überprüfen einer erfolgreichen Formel -> funktioniert

2. Überprüfen einer Formel mit Syntaxfehler

Erwartetes Ergebnis: Check nicht erfolgreich, Syntaxfehler wird bei der Fehlernachricht gesetzt

Tatsächliches Ergebnis: Check nicht erfolgreich, Syntaxfehler wird bei der Fehlernachricht gesetzt


3. Überprüfen ohne Formel -> funktioniert



4. Alle Formel überprüfen

Erwartetes Ergebnis: Alle Formeln werden überprüft und dementsprechend die Ergebnisse angezeigt; der Trace wird nicht gewechselt

Tatsächliches Ergebnis: Alle Formeln werden überprüft und dementsprechend die Ergebnisse angezeigt; der Trace wird nicht gewechselt




5. Überprüfen einer Formel mit Gegenbeispiel

Erwartetes Ergebnis: Formel wird überprüft und ein Gegenbeispiel gefunden; es wird nicht direkt zum Gegenbeispiel gewechselt

Tatsächliches Ergebnis: Formel wird überprüft und ein Gegenbeispiel gefunden; es wird nicht direkt zum Gegenbeispiel gewechselt



6. Überprüfen ohne Formel mit Gegenbeispiel

Erwartetes Ergebnis: Formel wird überprüft und ein Gegenbeispiel gefunden; es wird nicht direkt zum Gegenbeispiel gewechselt

Tatsächliches Ergebnis: Formel wird überprüft und ein Gegenbeispiel gefunden; es wird nicht direkt zum Gegenbeispiel gewechselt




7. Hilfebutton -> springt noch nicht an die richtige Stelle



8. Hinzufügen einer Formel -> funktioniert

9. Hinzufügen und überprüfen einer Formel -> funktioniert



10. Überprüfen aller Strategien (Sequence, Invariant, Deadlock, Find deadlock, Find redundant invariants, check refinement, check assertions, find valid state, check all operations, IC3, TINDUCTION, KINDUCTION, BMC) -> funktioniert



11. Hinzufügen bereits vorhandener Formel

Erwartetes Ergebnis: Es wird keine zusätzliche Formel hinzugefügt und der Nutzer benachrichtigt

Tatsächliches ergebnis: Es wird keine zusätzliche Formel hinzugefügt und der Nutzer benachrichtigt




12. Überprüfen bereits vorhandener Formeln über Hinzufügen-Button

Erwartetes Ergebnis: Vorhandene Formel wird nochmal überprüft

Tatsächliches Ergebnis: Vorhandene Formel wird nochmal überprüft





13. Abbrechen der Überprüfungen -> Interrupt funktioniert nicht


14. Deaktivierung einer Formel

Erwartetes Ergebnis: Bei Deaktivierung der Formel passt sich der Machine Status und die Status Bar für die Fehler sich an

Tatsächliches Ergebnis: Bei Deaktivierung der Formel passt sich der Machine Status und die Status Bar für die Fehler sich an


15. Überprüfung mit deaktivierter Formel

Erwartetes Ergebnis: Deaktivierte Formel werden nicht überprüft

Tatsächliches Ergebnis: Deaktivierte Formel werden nicht überprüft





Bemerkungen: 
-Interrupt funktioniert bei SymbolicModelchecking noch nicht ganz
-Können mehrere Gegenbeispiel gefunden werden?






31. Groovy Konsole

1. Inspect groovy objects

Es wird inspect in der Konsole eingegeben

Erwartetes Ergebnis: es werden alle vorhandenen Objekte in der Groovy Engine angezeigt

Tatsächliches Ergebnis: es werden alle vorhandenen Objekte in der Groovy Engine angezeigt





2. Code Completion hinter dem Punkt

Erwartetes Ergebnis: Es wird die gesamte Auswahl hinter dem Punkt ergänzt

Tatsächliches Ergebnis: Es wird die gesamte Auswahl hinter dem Punkt ergänzt



3. Code Completion mittendrin im Vorschlag

Erwartetes Ergebnis: Der rechte Teilstring wird an den linken bereits eingegebenen Teilstring hinzugefügt, der Vorschlag ist von dem linken Teilstring abhängig

Tatsächliches Ergebnis: Der rechte Teilstring wird an den linken bereits eingegebenen Teilstring hinzugefügt, der Vorschlag ist von dem linken Teilstring abhängig



4. Code Completion vor dem Punkt

Erwartetes Ergebnis: es werden alle Objekte angezeigt

Tatsächliches Ergebnis: es werden alle Objekte angezeigt





5. Code Completion hinter dem Punkt

Erwartetes Ergebnis: es werden zu dem Objekt vor dem Punkt alle Felder und Methoden angezeigt

Tatsächliches Ergebnis: es werden zu dem Objekt vor dem Punkt alle Felder und Methoden angezeigt


6. STRG + Leertaste mit möglichen Vorschlägen

Erwartetes Ergebnis: es wird die Code Completion mit allen möglichen Vorschlägen angezeigt

Tatsächliches Ergebnis: es wird die Code Completion mit allen möglichen Vorschlägen angezeigt



7. STRG + Leertaste ohne mögliche Vorschläge


Erwartetes Ergebnis: es wird nicht die Code Completion angezeigt

Tatsächliches Ergebnis: es wird nicht die Code Completion angezeigt



8. Ausführung von Befehlen -> funktioniert



9. Eingabe in der Konsole 

Erwartetes Ergebnis: Bei der Eingabe in der Konsole wird immer ans Ende hinzugefügt wenn man sich nicht in der letzten Zeile befindet, ansonsten wird an der aktuellen Position hinzugefügt

Tatsächliches Ergebnis: Bei der Eingabe in der Konsole wird immer ans Ende hinzugefügt wenn man sich nicht in der letzten Zeile befindet, ansonsten wird an der aktuellen Position hinzugefügt



10. Copy -> funktioniert

11. Paste -> funktioniert



12. Drag and Drop mit Dateien

Erwartetes Ergebnis: es wird in der Konsole der Pfad der Datei hinter der Position des Cursors hinzugefügt

Tatsächliches Ergebnis: es wird in der Konsole der Pfad der Datei hinter der Position des Cursors hinzugefügt


13. History durchgehen (Pfeiltaste nach oben) -> funktioniert


14. Recursive search mit Eingabe (STRG + R)

Erwartetes Ergebnis: es wird anhand der Eingabe rückwärts die History durchgegangen und Vorschläge angezeigt, wo Eingabe und Substring von dem jeweiligen Eintrag in der History ist

Tatsächliches Ergebnis: es wird anhand der Eingabe rückwärts die History durchgegangen und Vorschläge angezeigt, wo Eingabe und Substring von dem jeweiligen Eintrag in der History ist




15. Recursive search mit fehlgeschlagener Suche

Erwartetes Ergebnis: es wird angezeigt, dass zu der Eingabe kein Eintrag in der History passt

Tatsächliches Ergebnis: es wird angezeigt, dass zu der Eingabe kein Eintrag in der History passt




16. STRG + A, STRG + E 

Erwartetes Ergebnis: Bei STRG + A wird an den Anfang der Zeile gesprungen, bei STRG + E wird ans Ende der Zeile gesprungen

Tatsächliches Ergebnis: Bei STRG + A wird an den Anfang der Zeile gesprungen, bei STRG + E wird ans Ende der Zeile gesprungen


17. Clear mit Eingabe von "clear" -> funktioniert

Bemerkung:
-hat noch keinen HelpButton






32. B Konsole

1. Ausführung von Befehlen -> funktioniert



2. Eingabe in der Konsole 

Erwartetes Ergebnis: Bei der Eingabe in der Konsole wird immer ans Ende hinzugefügt wenn man sich nicht in der letzten Zeile befindet, ansonsten wird an der aktuellen Position hinzugefügt

Tatsächliches Ergebnis: Bei der Eingabe in der Konsole wird immer ans Ende hinzugefügt wenn man sich nicht in der letzten Zeile befindet, ansonsten wird an der aktuellen Position hinzugefügt


3. Copy -> funktioniert

4. Paste -> funktioniert



5. Drag and Drop mit Dateien

Erwartetes Ergebnis: es wird in der Konsole der Pfad der Datei hinter der Position des Cursors hinzugefügt

Tatsächliches Ergebnis: es wird in der Konsole der Pfad der Datei hinter der Position des Cursors hinzugefügt


6. History durchgehen (Pfeiltaste nach oben) -> funktioniert


7. Recursive search mit Eingabe (STRG + R)

Erwartetes Ergebnis: es wird anhand der Eingabe rückwärts die History durchgegangen und Vorschläge angezeigt, wo Eingabe und Substring von dem jeweiligen Eintrag in der History ist

Tatsächliches Ergebnis: es wird anhand der Eingabe rückwärts die History durchgegangen und Vorschläge angezeigt, wo Eingabe und Substring von dem jeweiligen Eintrag in der History ist





8. Recursive search mit fehlgeschlagener Suche

Erwartetes Ergebnis: es wird angezeigt, dass zu der Eingabe kein Eintrag in der History passt

Tatsächliches Ergebnis: es wird angezeigt, dass zu der Eingabe kein Eintrag in der History passt




9. STRG + A, STRG + E 

Erwartetes Ergebnis: Bei STRG + A wird an den Anfang der Zeile gesprungen, bei STRG + E wird ans Ende der Zeile gesprungen

Tatsächliches Ergebnis: Bei STRG + A wird an den Anfang der Zeile gesprungen, bei STRG + E wird ans Ende der Zeile gesprungen


10. Anzeige der Sprache der aktuellen Maschine -> nicht immer richtig?


11. Clear mit Button -> funktioniert

12. Clear mit Eingabe von ":clear" -> funktioniert





33. Plugin Mechanismus
-Momentan kann man mit Plugins Features ohne Einschränkungen erstellen
-Plugins müssen geändert werden, wenn sich die API in der ProB2-UI ändert -> schwierig ohne Release?
-Exceptions in der ProB2-UI können aufgrund fehlerhafter Implementierung von Plugins auftreten
-momentan noch schwierig zu testen?





34. UI Persistenz

1. Geöffnete Stages beim Schließen öffnen sich beim Starten -> funktioniert

2. Geöffnete Stages nach Detachen beim Schließen öffnen sich beim Starten -> funktioniert

3. Größe und Positionen der Fenster werden persistiert -> funktioniert

4. Größe und Positionen der detachten Fenster werden persistiert -> funktioniert

5. History der Groovy Konsole -> funktioniert

6. History der B Konsole -> funktioniert

7. Ausgewählte Perspektive -> funktioniert

8. Recent Projects -> funktioniert

9. Schriftgröße -> funktioniert

10. Maximale Anzahl Recent Projects -> funktioniert

11. Expanded Titled Panes -> funktioniert

12. Global Preferences -> funktioniert

13. Default Project Location -> funktioniert

14. OperationsView (Sort mode und Show disabled) -> funktioniert

15. Plugin Ordner -> funktioniert

16. eingestellte Sprache -> funktioniert

17. Selbstgeschriebenes Layout -> funktioniert

18. Selbstgeschriebenes Layout mit Detachen -> funktioniert


