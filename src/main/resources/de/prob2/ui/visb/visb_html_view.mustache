<!DOCTYPE html>
<html>
<head>
	{{! This is for zooming in and out and scaling the image to the right width and height}}
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<script src="{{&jqueryLink}}"></script>
	<script>
		function getErrorMessagesNode() {
			return document.getElementById("visb_error_messages").getElementsByTagName("ul")[0];
		}

		function appendErrorMessage(message) {
			console.log(message);
			const entry = document.createElement("li");
			entry.appendChild(document.createTextNode(message));
			getErrorMessagesNode().appendChild(entry);
			return entry;
		}

		function getDebugMessagesNode() {
			return document.getElementById("visb_debug_messages");
		}

		function checkSvgId(id,ctxt){
			const element = document.getElementById(id);
			if (element === null) {
				appendErrorMessage("Unknown SVG id '" + id + "' for " + ctxt);
			}
			return element;
		}

		function changeAttribute(id, attribute, value){
			$(document).ready(function(){
				const obj = checkSvgId(id, "attribute " + attribute);
				if (obj == null) {
					// obj not found (error message has already been displayed by checkSvgId)
				} else if(attribute=="text") {
					obj.textContent = value;
				} else {
					obj.setAttribute(attribute, value);
				}
			});
		}

		function activateClickEvents() {
			let obj;
			{{#clickEvents}}
			obj = checkSvgId("{{&eventID}}", "VisB Event");
			if (obj !== null) {
				obj.onclick = function(event) {
					visBConnector.click(this.id,event.pageX,event.pageY,event.shiftKey,event.metaKey);
					{{! we could pass event.altKey, event.ctrlKey, event.metaKey, event.shiftKey, event.timeStamp}}
					{{! event.which: 1=left mouse button, 2, 3}}
					{{! event.clientX,event.clientY, screenX, screenY : less useful probably}}
				};
				
				{{! attach mouseover/mouseout event handlers to put event into visb_debug_messages text field}}
				
				obj.onmouseover = function(ev) {
					{{&enterAction}}
					getDebugMessagesNode().textContent = "{{&eventName}}";
					// comment in this line instead if you wish to see coordinates
					// getDebugMessagesNode().textContent = "{{&eventName}} " + ev.pageX + "," + ev.pageY;
				};
				obj.onmouseout = function() {
					{{&leaveAction}}
					resetDebugMessages();
				};
			}
			{{/clickEvents}}
		}

		function showModelNotInitialised() {
			appendErrorMessage("Model not initialised").style.color = "blue";
		}

		function resetDebugMessages() {
			getDebugMessagesNode().textContent = "";
		}

		function resetErrorMessages() {
			getErrorMessagesNode().textContent = "";
		}

	</script>
	</head>

	<body>
	<div text-align="center"> {{&svgContent}}
	</div>
	<div id="visb_error_messages" style="color:red"><ul></ul>
	</div>
	</body>
</html>
