{
    "activations": [
        {
            "id": "$setup_constants",
            "execute": "$setup_constants"
        },
        {
            "id": "$initialise_machine",
            "execute": "$initialise_machine",
            "activating" : ["Any_Action"]
        },
        {
            "id": "Any_Action",
            "chooseActivation": {
                "RS_Action": 0.5,
                "IS_Action": 0.25,
                "IL_Action": 0.25
            }
        },
            {
                "id": "RS_Action",
                "chooseActivation": {
                    "RS_trainArrivalRequest": 0.1,
                    "RS_trainMoveFront": 0.8,
                    "RS_trainChangeDirection": 0.1
                }
            },
                {
                    "id": "RS_trainArrivalRequest",
                    "chooseActivation": {
                        "RS_trainArrivalRequest_Exec": "IF GET_IS_ENABLED(\"RS_trainArrivalRequest\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"RS_trainArrivalRequest\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "RS_trainArrivalRequest_Exec",
                        "after": 1000,
                        "execute": "RS_trainArrivalRequest",
                        "probabilisticVariables": "uniform",
                        "activating": ["skip", "RS_trainArrivalRequest_Choose"]
                    },
                        {
                            "id": "RS_trainArrivalRequest_Choose",
                            "chooseActivation": {
                                "IL_trainAcceptArrival_Choose": 0.95,
                                "IL_trainDeclineArrival": 0.05
                            }
                        },
                            {
                                "id": "IL_trainAcceptArrival_Choose",
                                "chooseActivation": {
                                    "IL_trainAcceptArrival": "IF { Train, route | Train : dom(RS_requestingArrivalTrains) & route : allIdsOfType(\"route\") & GET_IS_ENABLED_TRANSITION(FORMAT_TO_STRING(\"IL_startRouteReservation(\\\"~w\\\",~w)\", [route, TO_STRING(Train)])) = TRUE } /= {} THEN 1.0 ELSE 0.0 END",
                                    "IL_trainAcceptArrival_Exec": "1.0 - IF { Train, route | Train : dom(RS_requestingArrivalTrains) & route : allIdsOfType(\"route\") & GET_IS_ENABLED_TRANSITION(FORMAT_TO_STRING(\"IL_startRouteReservation(\\\"~w\\\",~w)\", [route, TO_STRING(Train)])) = TRUE } /= {} THEN 1.0 ELSE 0.0 END"
                                }
                            },
                                {
                                    "id": "IL_trainAcceptArrival",
                                    "after": 1000,
                                    "execute": "IL_startRouteReservation",
                                    "additionalGuards": "{ Train, route | Train : dom(RS_requestingArrivalTrains) & route : allIdsOfType(\"route\") & GET_IS_ENABLED_TRANSITION(FORMAT_TO_STRING(\"IL_startRouteReservation(\\\"~w\\\",~w)\", [route, TO_STRING(Train)])) = TRUE } /= {}",
                                    "fixedVariables":{
                                        "Train": "random_element(dom({ Train, route | Train : dom(RS_requestingArrivalTrains) & route : allIdsOfType(\"route\") & GET_IS_ENABLED_TRANSITION(FORMAT_TO_STRING(\"IL_startRouteReservation(\\\"~w\\\",~w)\", [route, TO_STRING(Train)])) = TRUE }))"
                                    },
                                    "activating": ["skip", "IL_startActivateSignalplan", "IL_endRouteReservation"],
                                    "comment": "IL_trainAcceptArrival_Exec activated after end of route reservation"
                                },
                                    {
                                        "id": "IL_trainAcceptArrival_Exec",
                                        "after": 1000,
                                        "execute": "IL_trainAcceptArrival",
                                        "probabilisticVariables": "uniform",
                                        "activating" : ["skip"]
                                    },
                            {
                                "id": "IL_trainDeclineArrival",
                                "after": 1000,
                                "execute": "IL_trainDeclineArrival",
                                "probabilisticVariables": "uniform",
                                "activating" : ["skip"]
                            },
                {
                    "id": "RS_trainMoveFront",
                    "chooseActivation":{
                        "RS_trainMoveFront_Exec": "IF GET_IS_ENABLED(\"RS_trainMoveFront\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"RS_trainMoveFront\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "RS_trainMoveFront_Exec",
                        "execute": "RS_trainMoveFront",
                        "after": 1000,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "RS_trainMoveBack"]
                    },
                        {
                            "id": "RS_trainMoveBack",                            
                            "execute": "RS_trainMoveBack",
                            "after": 1000,
                            "probabilisticVariables": "uniform",
                            "activating" : ["skip", "RS_trainMoveBack", "RS_trainLeave", "IL_ReleaseAction"]
                        },
                            {
                                "id": "RS_trainLeave",
                                "after": 1000,
                                "execute": "RS_trainLeave",
                                "probabilisticVariables": "uniform",
                                "activating" : ["skip"]
                            },
                {
                    "id": "RS_trainChangeDirection",
                    "chooseActivation":{
                        "RS_trainChangeDirection_Exec": "IF GET_IS_ENABLED(\"RS_trainChangeDirection\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"RS_trainChangeDirection\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "RS_trainChangeDirection_Exec",
                        "after": 1000,
                        "priority": 1,
                        "execute": "RS_trainChangeDirection",
                        "probabilisticVariables": "uniform",
                        "activating": ["skip", "RS_trainMoveFront"]
                    },

            {
                "id": "IS_Action",
                "chooseActivation": {
                    "IS_startChangeCrossing": 0.25,
                    "IS_startChangeDerailer": 0.25,
                    "IS_startChangeSwitch": 0.5
                },
                "comment": "TODO: IS_startChangeCoupledSwitches"
            },
            {
                "id": "IS_startChangeCrossing",
                    "chooseActivation": {
                        "IS_startChangeCrossing_Exec": "IF GET_IS_ENABLED(\"IS_startChangeCrossing\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"IS_startChangeCrossing\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "IS_startChangeCrossing_Exec",
                        "execute": "IS_startChangeCrossing",
                        "after": 1000,
                        "priority": 1,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "IS_endChangeCrossing"]
                    },
                        {
                            "id": "IS_endChangeCrossing",
                            "execute": "IS_endChangeCrossing",
                            "after": "RailML3_IL_MOVABLE_CROSSING_TYPICAL_THROW_TIMES(CrossingId)",
                            "fixedVariables": { "CrossingId": "CrossingId" },
                            "activating": ["skip", "IL_noteChangeSignalState", "IL_endRouteReservation"]
                        },
                {
                    "id": "IS_startChangeDerailer",
                    "chooseActivation": {
                        "IS_startChangeDerailer_Exec": "IF GET_IS_ENABLED(\"IS_startChangeDerailer\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"IS_startChangeDerailer\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "IS_startChangeDerailer_Exec",
                        "execute": "IS_startChangeDerailer",
                        "after": 1000,
                        "priority": 1,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "IS_endChangeDerailer"]
                    },
                        {
                            "id": "IS_endChangeDerailer",
                            "execute": "IS_endChangeDerailer",
                            "after": "RailML3_IL_DERAILER_TYPICAL_THROW_TIMES(DerailerId)",
                            "fixedVariables": { "DerailerId": "DerailerId" },
                            "activating": ["skip", "IL_noteChangeSignalState", "IL_endRouteReservation"]
                        },
                    
                {
                    "id": "IS_startChangeSwitch",
                    "chooseActivation": {
                        "IS_startChangeSwitch_Exec": "IF GET_IS_ENABLED(\"IS_startChangeSwitch\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"IS_startChangeSwitch\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "IS_startChangeSwitch_Exec",
                        "execute": "IS_startChangeSwitch",
                        "after": 1000,
                        "priority": 1,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "IS_endChangeSwitch"]
                    },
                        {
                            "id": "IS_endChangeSwitch",
                            "execute": "IS_endChangeSwitch",
                            "after": "RailML3_IL_SWITCH_TYPICAL_THROW_TIMES(SwitchId)",
                            "fixedVariables": { "SwitchId": "SwitchId" },
                            "activating": ["skip", "IS_endChangeSwitch_RelatedMovableElement", "IL_noteChangeSignalState", "IL_endRouteReservation"]
                        },
                            {
                                "id": "IS_endChangeSwitch_RelatedMovableElement",
                                "execute": "IS_endChangeSwitch",
                                "additionalGuards": "SwitchId : dom(RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT)",
                                "after": "IF SwitchId : dom(RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT) & RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT(SwitchId) : RailML3_IS_SWITCH_IDS THEN RailML3_IL_SWITCH_TYPICAL_THROW_TIMES(RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT(SwitchId)) ELSE 1000 END",
                                "fixedVariables": { "SwitchId": "IF SwitchId : dom(RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT) & RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT(SwitchId) : RailML3_IS_SWITCH_IDS THEN RailML3_IL_SWITCH_RELATED_MOVABLE_ELEMENT(SwitchId) ELSE random_element(allIdsOfType(\"switchIS\")) END" },
                                "activating": ["skip", "IL_noteChangeSignalState", "IL_endRouteReservation"]
                            },

            {
                "id": "IL_Action",
                "chooseActivation": {
                    "IL_startRouteReservation_Choose": 0.34,
                    "IL_startActivateSignalplan_Choose": 0.33,
                    "IL_changeSignalState": 0.33
                }
            },
                {
                    "id": "IL_startRouteReservation_Choose",
                    "chooseActivation":{
                        "IL_startRouteReservation": "IF GET_IS_ENABLED(\"IL_startRouteReservation\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"IL_startRouteReservation\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "IL_startRouteReservation",
                        "execute": "IL_startRouteReservation",
                        "after": 1000,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "IS_Action", "IL_startActivateSignalplan_Choose", "IL_endRouteReservation"]
                    },
                {
                    "id": "IL_startActivateSignalplan_Choose",
                    "chooseActivation":{
                        "IL_startActivateSignalplan": "IF GET_IS_ENABLED(\"IL_startActivateSignalplan\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"IL_startActivateSignalplan\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "IL_startActivateSignalplan",
                        "execute": "IL_startActivateSignalplan",
                        "after": 1000,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "IL_noteChangeSignalState"]
                    },
                        {
                            "id": "IL_noteChangeSignalState",
                            "execute": "IL_noteChangeSignalState",
                            "after": 1000,
                            "probabilisticVariables": "uniform",
                            "activating" : ["skip", "IL_startRouteReservation", "IS_Action", "IL_noteChangeSignalState", "IL_endRouteReservation", "IL_endActivateSignalplan"]
                        },
                    {
                        "id": "IL_endRouteReservation",
                        "execute": "IL_endRouteReservation",
                        "after": 1000,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip", "IL_endActivateSignalplan", "IL_trainAcceptArrival_Exec"]
                    },
                    {
                        "id": "IL_endActivateSignalplan",
                        "execute": "IL_endActivateSignalplan",
                        "after": 1000,
                        "probabilisticVariables": "uniform",
                        "activating" : ["skip"]
                    },
                {
                    "id": "IL_changeSignalState",
                    "chooseActivation": {
                        "IL_changeSignalState_Exec": "IF GET_IS_ENABLED(\"IL_changeSignalState\") = TRUE THEN 1.0 ELSE 0.0 END",
                        "skip": "1.0 - IF GET_IS_ENABLED(\"IL_changeSignalState\") = TRUE THEN 1.0 ELSE 0.0 END"
                    }
                },
                    {
                        "id": "IL_changeSignalState_Exec",
                        "execute": "IL_changeSignalState",
                        "after": 1000,
                        "probabilisticVariables": "uniform",
                        "activating": ["skip"]
                    },
        {
            "id": "IL_ReleaseAction",
            "chooseActivation": {
                "IL_partialRouteReleaseAhead": 0.1,
                "IL_partialRouteReleaseRear": 0.3,
                "IL_completeRouteReleaseAhead": 0.1,
                "IL_completeRouteReleaseRear": 0.3,
                "IL_startOverlapRelease": 0.2
            }
        },
            {
                "id": "IL_partialRouteReleaseAhead",
                "chooseActivation": {
                    "IL_partialRouteReleaseAhead_Exec": "IF GET_IS_ENABLED(\"IL_partialRouteReleaseAhead\") = TRUE THEN 1.0 ELSE 0.0 END",
                    "skip": "1.0 - IF GET_IS_ENABLED(\"IL_partialRouteReleaseAhead\") = TRUE THEN 1.0 ELSE 0.0 END"
                }
            },
                {
                    "id": "IL_partialRouteReleaseAhead_Exec",
                    "execute": "IL_partialRouteReleaseAhead",
                    "after": 1000,
                    "probabilisticVariables": "uniform",
                    "activating" : ["skip", "IL_ReleaseAction"]
                },
            {
                "id": "IL_partialRouteReleaseRear",
                "chooseActivation": {
                    "IL_partialRouteReleaseRear_Exec": "IF GET_IS_ENABLED(\"IL_partialRouteReleaseRear\") = TRUE THEN 1.0 ELSE 0.0 END",
                    "skip": "1.0 - IF GET_IS_ENABLED(\"IL_partialRouteReleaseRear\") = TRUE THEN 1.0 ELSE 0.0 END"
                }
            },
                {
                    "id": "IL_partialRouteReleaseRear_Exec",
                    "execute": "IL_partialRouteReleaseRear",
                    "after": 1000,
                    "probabilisticVariables": "uniform",
                    "activating" : ["skip", "IL_ReleaseAction"]
                },
            {
                "id": "IL_completeRouteReleaseAhead",
                "chooseActivation": {
                    "IL_completeRouteReleaseAhead_Exec": "IF GET_IS_ENABLED(\"IL_completeRouteReleaseAhead\") = TRUE THEN 1.0 ELSE 0.0 END",
                    "skip": "1.0 - IF GET_IS_ENABLED(\"IL_completeRouteReleaseAhead\") = TRUE THEN 1.0 ELSE 0.0 END"
                }
            },
                {
                    "id": "IL_completeRouteReleaseAhead_Exec",
                    "execute": "IL_completeRouteReleaseAhead",
                    "after": 1000,
                    "probabilisticVariables": "uniform",
                    "activating" : ["skip", "IL_ReleaseAction"]
                },
            {
                "id": "IL_completeRouteReleaseRear",
                "chooseActivation": {
                    "IL_completeRouteReleaseRear_Exec": "IF GET_IS_ENABLED(\"IL_completeRouteReleaseRear\") = TRUE THEN 1.0 ELSE 0.0 END",
                    "skip": "1.0 - IF GET_IS_ENABLED(\"IL_completeRouteReleaseRear\") = TRUE THEN 1.0 ELSE 0.0 END"
                }
            },
                {
                    "id": "IL_completeRouteReleaseRear_Exec",
                    "execute": "IL_completeRouteReleaseRear",
                    "after": 1000,
                    "probabilisticVariables": "uniform",
                    "activating" : ["skip", "IL_ReleaseAction"]
                },
            {
                "id": "IL_startOverlapRelease",
                "chooseActivation": {
                    "IL_startOverlapRelease_Exec": "IF GET_IS_ENABLED(\"IL_startOverlapRelease\") = TRUE THEN 1.0 ELSE 0.0 END",
                    "skip": "1.0 - IF GET_IS_ENABLED(\"IL_startOverlapRelease\") = TRUE THEN 1.0 ELSE 0.0 END"
                }
            },
                {
                    "id": "IL_startOverlapRelease_Exec",
                    "execute": "IL_startOverlapRelease",
                    "after": 1000,
                    "probabilisticVariables": "uniform",
                    "activating" : ["skip", "IL_endOverlapRelease"]
                },
                    {
                        "id": "IL_endOverlapRelease",
                        "execute": "IL_endOverlapRelease",
                        "after": "IF OverlapId : dom(RailML3_IL_OVERLAP_RELEASE_TIMERS) & RailML3_IL_OVERLAP_RELEASE_TIMERS(OverlapId) /= {} THEN CHOOSE(RailML3_IL_OVERLAP_RELEASE_TIMERS(OverlapId)) ELSE 5000 END",
                        "fixedVariables": { "OverlapId": "OverlapId" },
                        "activating" : ["skip"],
                        "comment": "fixedVariables: OverlapId, for after: IF OverlapId : dom(RailML3_IL_OVERLAP_RELEASE_TIMERS) & RailML3_IL_OVERLAP_RELEASE_TIMERS(OverlapId) /= {} THEN CHOOSE(RailML3_IL_OVERLAP_RELEASE_TIMERS(OverlapId)) ELSE 5000 END"
                    },
        {
            "id": "skip",
            "execute": "skip",
            "after": 100,
            "activating": ["Any_Action"]
        }
    ],
    "listeners" : [
        {
            "id": "IS_changeSwitch",
            "event": "IS_startChangeSwitch",
            "activating": ["IS_endChangeSwitch"]
        },
        {
            "id": "RS_moveTrain",
            "event": "RS_trainMoveFront",
            "activating": ["RS_trainMoveBack"]
        }
    ]
}